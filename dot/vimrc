set nocompatible        " Use Vim defaults (much better!)
set noedcompatible
set bs=2                " Allow backspacing over everything in insert mode
set ai                  " Always set autoindenting on
set tw=0                " Don't wrap lines
set wrap                " Display long lines wrapped.
set viminfo='20,\"50    " Read/write a .viminfo file, don't store more than 50 lines of register
set cmdheight=2         " Height of the command line (the one at the bottom)
set background=light    " Switch this to dark for dark terminals
set vb                  " Use visual bell instead of a sound
set t_vb=
set title               " Set the window title
set autowriteall        " Write changed files on exit
set autoread            " Re-read files that changed on disk
set showmatch           " Highlight matching brackets
set showcmd             " Show (partial) command in the last line of the screen
set ruler               " Show the line and column number of the cursor position.
set laststatus=2        " Always show a status line.
set scrolloff=4         " Minimal number of screen lines to keep above and below the cursor.
set hidden              " Allow several buffers to be opened (and unsaved).
set tabstop=2           " Number of spaces that a <Tab> in the file counts for.
set shiftwidth=2        " Number of spaces to use for each step of (auto)indent.
set softtabstop=2       " Number of spaces that a <Tab> counts for while performing editing operations.
set expandtab           " Use the appropriate number of spaces to insert a <Tab>.
set ignorecase          " Case-insensitive search
set incsearch           " Incremental search shows the first match while typing the search pattern.
set smartcase           " Override the 'ignorecase' option if the search pattern contains upper case characters.
set confirm             " Use confirmation dialogs.
set encoding=utf-8      " The terminal encoding.
set fileencodings=ucs-bom,utf-8,default,latin1  " The order of file encodings to try.
set shell=/bin/sh       " Always use sh when executing commands with :!
set wildmenu            " Command-line completion operates in an enhanced mode.
set wildmode=longest,list
                        " Completion mode.
set list                " List mode: Show tabs as CTRL-I, show end of line with $.
set listchars=tab:»\ ,extends:¤,trail:·
                        " Strings to use in 'list' mode.

syntax on               " Syntax highlighting
syntax sync fromstart
set hlsearch            " Highlight all search matches.

filetype on             " Enable filetype detection
filetype indent on      " Enable filetype-specific indenting
filetype plugin on      " Enable filetype-specific plugins

" Search for the string marked in visual mode. E.g.: press v, go some chars to the right, press /
vmap / y/<C-R>"<CR>

" Don't use Ex mode, use Q for formatting
map Q gq

" Ctrl-p: previous buffer
map <C-p> :bp<CR>

" Ctrl-n: next buffer
map <C-n> :bn<CR>

" Go over wrapped lines with j and k. These will jump to the next/previous
" displayed line instead of the next/previous physical line.
map j gj
map k gk

augroup DeleteTrailingWhitespaces
  autocmd!
  autocmd BufWritePre * ks|execute "%s/\\s\\+$//ge"|'s
augroup END

augroup TabWidth
  autocmd!
  autocmd FileType objc  set tabstop=4 shiftwidth=4 softtabstop=4
  autocmd FileType tcl   set tabstop=4 shiftwidth=4 softtabstop=4
  autocmd FileType ruby  set tabstop=2 shiftwidth=2 softtabstop=2
augroup END
